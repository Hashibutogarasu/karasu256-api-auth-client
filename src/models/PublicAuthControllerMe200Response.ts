/* tslint:disable */
/* eslint-disable */
/**
 * Karasu Lab API
 * API documentation for Karasu Lab
 *
 * The version of the OpenAPI document: 3.3.34
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PublicAuthControllerMe200ResponseMetadata } from './PublicAuthControllerMe200ResponseMetadata';
import {
    PublicAuthControllerMe200ResponseMetadataFromJSON,
    PublicAuthControllerMe200ResponseMetadataFromJSONTyped,
    PublicAuthControllerMe200ResponseMetadataToJSON,
    PublicAuthControllerMe200ResponseMetadataToJSONTyped,
} from './PublicAuthControllerMe200ResponseMetadata';
import type { PublicAuthControllerMe200ResponseProviderDataInner } from './PublicAuthControllerMe200ResponseProviderDataInner';
import {
    PublicAuthControllerMe200ResponseProviderDataInnerFromJSON,
    PublicAuthControllerMe200ResponseProviderDataInnerFromJSONTyped,
    PublicAuthControllerMe200ResponseProviderDataInnerToJSON,
    PublicAuthControllerMe200ResponseProviderDataInnerToJSONTyped,
} from './PublicAuthControllerMe200ResponseProviderDataInner';

/**
 * 
 * @export
 * @interface PublicAuthControllerMe200Response
 */
export interface PublicAuthControllerMe200Response {
    /**
     * 
     * @type {string}
     * @memberof PublicAuthControllerMe200Response
     */
    uid: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAuthControllerMe200Response
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof PublicAuthControllerMe200Response
     */
    emailVerified: boolean;
    /**
     * 
     * @type {string}
     * @memberof PublicAuthControllerMe200Response
     */
    displayName: string;
    /**
     * 
     * @type {string}
     * @memberof PublicAuthControllerMe200Response
     */
    photoURL: string;
    /**
     * 
     * @type {boolean}
     * @memberof PublicAuthControllerMe200Response
     */
    disabled: boolean;
    /**
     * 
     * @type {PublicAuthControllerMe200ResponseMetadata}
     * @memberof PublicAuthControllerMe200Response
     */
    metadata: PublicAuthControllerMe200ResponseMetadata;
    /**
     * 
     * @type {string}
     * @memberof PublicAuthControllerMe200Response
     */
    tokensValidAfterTime: string;
    /**
     * 
     * @type {Array<PublicAuthControllerMe200ResponseProviderDataInner>}
     * @memberof PublicAuthControllerMe200Response
     */
    providerData: Array<PublicAuthControllerMe200ResponseProviderDataInner>;
}

/**
 * Check if a given object implements the PublicAuthControllerMe200Response interface.
 */
export function instanceOfPublicAuthControllerMe200Response(value: object): value is PublicAuthControllerMe200Response {
    if (!('uid' in value) || value['uid'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('emailVerified' in value) || value['emailVerified'] === undefined) return false;
    if (!('displayName' in value) || value['displayName'] === undefined) return false;
    if (!('photoURL' in value) || value['photoURL'] === undefined) return false;
    if (!('disabled' in value) || value['disabled'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('tokensValidAfterTime' in value) || value['tokensValidAfterTime'] === undefined) return false;
    if (!('providerData' in value) || value['providerData'] === undefined) return false;
    return true;
}

export function PublicAuthControllerMe200ResponseFromJSON(json: any): PublicAuthControllerMe200Response {
    return PublicAuthControllerMe200ResponseFromJSONTyped(json, false);
}

export function PublicAuthControllerMe200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicAuthControllerMe200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'uid': json['uid'],
        'email': json['email'],
        'emailVerified': json['emailVerified'],
        'displayName': json['displayName'],
        'photoURL': json['photoURL'],
        'disabled': json['disabled'],
        'metadata': PublicAuthControllerMe200ResponseMetadataFromJSON(json['metadata']),
        'tokensValidAfterTime': json['tokensValidAfterTime'],
        'providerData': ((json['providerData'] as Array<any>).map(PublicAuthControllerMe200ResponseProviderDataInnerFromJSON)),
    };
}

export function PublicAuthControllerMe200ResponseToJSON(json: any): PublicAuthControllerMe200Response {
    return PublicAuthControllerMe200ResponseToJSONTyped(json, false);
}

export function PublicAuthControllerMe200ResponseToJSONTyped(value?: PublicAuthControllerMe200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'uid': value['uid'],
        'email': value['email'],
        'emailVerified': value['emailVerified'],
        'displayName': value['displayName'],
        'photoURL': value['photoURL'],
        'disabled': value['disabled'],
        'metadata': PublicAuthControllerMe200ResponseMetadataToJSON(value['metadata']),
        'tokensValidAfterTime': value['tokensValidAfterTime'],
        'providerData': ((value['providerData'] as Array<any>).map(PublicAuthControllerMe200ResponseProviderDataInnerToJSON)),
    };
}

